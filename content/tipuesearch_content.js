var tipuesearch = {"pages": [{'title': 'About', 'text': '40923228 \n', 'tags': '', 'url': 'About.html'}, {'title': 'W3', 'text': 'https://www.youtube.com/watch?v=Si35JTm7TrE \n \n -------------------------------------------------------------------------------------------------------------- \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'W3.html'}, {'title': '分組', 'text': '第1組: repo: \xa0 40923201 \xa0 www: \xa0 40923201 \xa0 cd2022bg1-repo: \xa0 40923201 \xa0 cd2022bg1-www: \xa0 40923201 repo: \xa0 40923205 \xa0 www: \xa0 40923205 \xa0 cd2022bg1-repo: \xa0 40923205 \xa0 cd2022bg1-www: \xa0 40923205 repo: \xa0 40923208 \xa0 www: \xa0 40923208 \xa0 cd2022bg1-repo: \xa0 40923208 \xa0 cd2022bg1-www: \xa0 40923208 repo: \xa0 40923210 \xa0 www: \xa0 40923210 \xa0 cd2022bg1-repo: \xa0 40923210 \xa0 cd2022bg1-www: \xa0 40923210 repo: \xa0 40923217 \xa0 www: \xa0 40923217 \xa0 cd2022bg1-repo: \xa0 40923217 \xa0 cd2022bg1-www: \xa0 40923217 repo: \xa0 40923230 \xa0 www: \xa0 40923230 \xa0 cd2022bg1-repo: \xa0 40923230 \xa0 cd2022bg1-www: \xa0 40923230 repo: \xa0 40923231 \xa0 www: \xa0 40923231 \xa0 cd2022bg1-repo: \xa0 40923231 \xa0 cd2022bg1-www: \xa0 40923231 repo: \xa0 40923235 \xa0 www: \xa0 40923235 \xa0 cd2022bg1-repo: \xa0 40923235 \xa0 cd2022bg1-www: \xa0 40923235 第2組: repo: \xa0 40823215 \xa0 www: \xa0 40823215 \xa0 cd2022bg2-repo: \xa0 40823215 \xa0 cd2022bg2-www: \xa0 40823215 repo: \xa0 40923203 \xa0 www: \xa0 40923203 \xa0 cd2022bg2-repo: \xa0 40923203 \xa0 cd2022bg2-www: \xa0 40923203 repo: \xa0 40923204 \xa0 www: \xa0 40923204 \xa0 cd2022bg2-repo: \xa0 40923204 \xa0 cd2022bg2-www: \xa0 40923204 repo: \xa0 40923207 \xa0 www: \xa0 40923207 \xa0 cd2022bg2-repo: \xa0 40923207 \xa0 cd2022bg2-www: \xa0 40923207 repo: \xa0 40923209 \xa0 www: \xa0 40923209 \xa0 cd2022bg2-repo: \xa0 40923209 \xa0 cd2022bg2-www: \xa0 40923209 repo: \xa0 40923213 \xa0 www: \xa0 40923213 \xa0 cd2022bg2-repo: \xa0 40923213 \xa0 cd2022bg2-www: \xa0 40923213 repo: \xa0 40923220 \xa0 www: \xa0 40923220 \xa0 cd2022bg2-repo: \xa0 40923220 \xa0 cd2022bg2-www: \xa0 40923220 repo: \xa0 40923240 \xa0 www: \xa0 40923240 \xa0 cd2022bg2-repo: \xa0 40923240 \xa0 cd2022bg2-www: \xa0 40923240 第3組: repo: \xa0 40923226 \xa0 www: \xa0 40923226 \xa0 cd2022bg3-repo: \xa0 40923226 \xa0 cd2022bg3-www: \xa0 40923226 repo: \xa0 40923242 \xa0 www: \xa0 40923242 \xa0 cd2022bg3-repo: \xa0 40923242 \xa0 cd2022bg3-www: \xa0 40923242 repo: \xa0 40923245 \xa0 www: \xa0 40923245 \xa0 cd2022bg3-repo: \xa0 40923245 \xa0 cd2022bg3-www: \xa0 40923245 repo: \xa0 40923247 \xa0 www: \xa0 40923247 \xa0 cd2022bg3-repo: \xa0 40923247 \xa0 cd2022bg3-www: \xa0 40923247 repo: \xa0 40923249 \xa0 www: \xa0 40923249 \xa0 cd2022bg3-repo: \xa0 40923249 \xa0 cd2022bg3-www: \xa0 40923249 repo: \xa0 40923252 \xa0 www: \xa0 40923252 \xa0 cd2022bg3-repo: \xa0 40923252 \xa0 cd2022bg3-www: \xa0 40923252 repo: \xa0 40923206 \xa0 www: \xa0 40923206 \xa0 cd2022bg3-repo: \xa0 40923206 \xa0 cd2022bg3-www: \xa0 40923206 repo: \xa0 40923224 \xa0 www: \xa0 40923224 \xa0 cd2022bg3-repo: \xa0 40923224 \xa0 cd2022bg3-www: \xa0 40923224 第4組: repo: \xa0 40923211 \xa0 www: \xa0 40923211 \xa0 cd2022bg4-repo: \xa0 40923211 \xa0 cd2022bg4-www: \xa0 40923211 repo: \xa0 40923218 \xa0 www: \xa0 40923218 \xa0 cd2022bg4-repo: \xa0 40923218 \xa0 cd2022bg4-www: \xa0 40923218 repo: \xa0 40923221 \xa0 www: \xa0 40923221 \xa0 cd2022bg4-repo: \xa0 40923221 \xa0 cd2022bg4-www: \xa0 40923221 repo: \xa0 40923223 \xa0 www: \xa0 40923223 \xa0 cd2022bg4-repo: \xa0 40923223 \xa0 cd2022bg4-www: \xa0 40923223 repo: \xa0 40923227 \xa0 www: \xa0 40923227 \xa0 cd2022bg4-repo: \xa0 40923227 \xa0 cd2022bg4-www: \xa0 40923227 repo: \xa0 40923243 \xa0 www: \xa0 40923243 \xa0 cd2022bg4-repo: \xa0 40923243 \xa0 cd2022bg4-www: \xa0 40923243 第5組: repo: \xa0 40923212 \xa0 www: \xa0 40923212 \xa0 cd2022bg5-repo: \xa0 40923212 \xa0 cd2022bg5-www: \xa0 40923212 repo: \xa0 40923229 \xa0 www: \xa0 40923229 \xa0 cd2022bg5-repo: \xa0 40923229 \xa0 cd2022bg5-www: \xa0 40923229 repo: \xa0 40923233 \xa0 www: \xa0 40923233 \xa0 cd2022bg5-repo: \xa0 40923233 \xa0 cd2022bg5-www: \xa0 40923233 repo: \xa0 40923234 \xa0 www: \xa0 40923234 \xa0 cd2022bg5-repo: \xa0 40923234 \xa0 cd2022bg5-www: \xa0 40923234 repo: \xa0 40923237 \xa0 www: \xa0 40923237 \xa0 cd2022bg5-repo: \xa0 40923237 \xa0 cd2022bg5-www: \xa0 40923237 repo: \xa0 40923251 \xa0 www: \xa0 40923251 \xa0 cd2022bg5-repo: \xa0 40923251 \xa0 cd2022bg5-www: \xa0 40923251 repo: \xa0 40923253 \xa0 www: \xa0 40923253 \xa0 cd2022bg5-repo: \xa0 40923253 \xa0 cd2022bg5-www: \xa0 40923253 repo: \xa0 40971220 \xa0 www: \xa0 40971220 \xa0 cd2022bg5-repo: \xa0 40971220 \xa0 cd2022bg5-www: \xa0 40971220 第6組: repo: \xa0 40723217 \xa0 www: \xa0 40723217 \xa0 cd2022bg6-repo: \xa0 40723217 \xa0 cd2022bg6-www: \xa0 40723217 repo: \xa0 40923219 \xa0 www: \xa0 40923219 \xa0 cd2022bg6-repo: \xa0 40923219 \xa0 cd2022bg6-www: \xa0 40923219 repo: \xa0 40923225 \xa0 www: \xa0 40923225 \xa0 cd2022bg6-repo: \xa0 40923225 \xa0 cd2022bg6-www: \xa0 40923225 repo: \xa0 40923232 \xa0 www: \xa0 40923232 \xa0 cd2022bg6-repo: \xa0 40923232 \xa0 cd2022bg6-www: \xa0 40923232 repo: \xa0 40923236 \xa0 www: \xa0 40923236 \xa0 cd2022bg6-repo: \xa0 40923236 \xa0 cd2022bg6-www: \xa0 40923236 repo: \xa0 40923241 \xa0 www: \xa0 40923241 \xa0 cd2022bg6-repo: \xa0 40923241 \xa0 cd2022bg6-www: \xa0 40923241 repo: \xa0 40923246 \xa0 www: \xa0 40923246 \xa0 cd2022bg6-repo: \xa0 40923246 \xa0 cd2022bg6-www: \xa0 40923246 repo: \xa0 40923250 \xa0 www: \xa0 40923250 \xa0 cd2022bg6-repo: \xa0 40923250 \xa0 cd2022bg6-www: \xa0 40923250 第7組: repo: \xa0 40723134 \xa0 www: \xa0 40723134 \xa0 cd2022bg7-repo: \xa0 40723134 \xa0 cd2022bg7-www: \xa0 40723134 repo: \xa0 40723136 \xa0 www: \xa0 40723136 \xa0 cd2022bg7-repo: \xa0 40723136 \xa0 cd2022bg7-www: \xa0 40723136 repo: \xa0 40732331 \xa0 www: \xa0 40732331 \xa0 cd2022bg7-repo: \xa0 40732331 \xa0 cd2022bg7-www: \xa0 40732331 repo: \xa0 40923214 \xa0 www: \xa0 40923214 \xa0 cd2022bg7-repo: \xa0 40923214 \xa0 cd2022bg7-www: \xa0 40923214 repo: \xa0 40923228 \xa0 www: \xa0 40923228 \xa0 cd2022bg7-repo: \xa0 40923228 \xa0 cd2022bg7-www: \xa0 40923228 repo: \xa0 40923238 \xa0 www: \xa0 40923238 \xa0 cd2022bg7-repo: \xa0 40923238 \xa0 cd2022bg7-www: \xa0 40923238 repo: \xa0 40923248 \xa0 www: \xa0 40923248 \xa0 cd2022bg7-repo: \xa0 40923248 \xa0 cd2022bg7-www: \xa0 40923248 repo: \xa0 40923216 \xa0 www: \xa0 40923216 \xa0 cd2022bg7-repo: \xa0 40923216 \xa0 cd2022bg7-www: \xa0 40923216 \n', 'tags': '', 'url': '分組.html'}, {'title': 'NX 1980啟動', 'text': '參考資料： https://mde.tw/cd2022_guide/content/NX1980.html \n', 'tags': '', 'url': 'NX 1980啟動.html'}, {'title': 'W7', 'text': '設法以隨身程式系統編譯此程式碼: \n \n git clone \xa0 https://github.com/mdecourse/scarysim.git \n 修改 scarysim.pro, 蓋掉第 11 行, 成為 # LIBS\xa0\xa0\xa0\xa0 += -lglut -lGLU \n cd scarysim \n qmake -o Makefile scarysim.pro \n mingw32-make -f Makefile.Release 可以在 release 目錄取得 scarysim.exe \n 因為 scarysim.exe 執行需要 base.obj, arm1.obj, arm2.obj, arm3.obj 等零件外型檔案, 以及對應的 .mtl 材質檔案, 因此可將 scarysim.exe 移至倉儲根目錄, 並且需要 msys64_20210419\\mingw64\\bin 路徑中的 dll 動態連結程式庫配合執行. \n 由於此套程式碼在 Target 模式下, 零組件間會造成干涉, 表示其 Inverse Kinematic 運算並不正確, 請設法修正此錯誤後, 修改其零件尺寸與操作控制方法, 設法模擬 MTB 的 \xa0 Pick and Place demo \xa0 範例. \n 請各組指定組員分別利用 Solvespace、NX12、NX1980、NX2008 與 Onshape 繪製 \xa0 Pick and Place demo \xa0 範例所需的零組件, 並完成 Coppeliasim 4.1.0、4.2.0 與 4.3.0 版的 MTB 機械手臂 Pick and Place 模擬, 完成後請說明在使用不同 MCAD 系統與版次的情況下, 該如何執行協同產品設計專案. \n \n', 'tags': '', 'url': 'W7.html'}, {'title': 'W8', 'text': '\n Onshape 繪圖過程 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n \n 組裝coppeliasim\xa0 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n \n \n 各零件Wink \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n \n \n CoppeliaSim \n', 'tags': '', 'url': 'W8.html'}, {'title': 'W10', 'text': '', 'tags': '', 'url': 'W10.html'}, {'title': 'w10_block_ui', 'text': 'w10_block_ui\n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'w10_block_ui.html'}, {'title': 'w10_nx_integ', 'text': 'wink \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'w10_nx_integ.html'}, {'title': 'w10_ssh', 'text': 'SSH wink \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n', 'tags': '', 'url': 'w10_ssh.html'}, {'title': 'W11', 'text': '', 'tags': '', 'url': 'W11.html'}, {'title': '心得', 'text': '心得:W8，藉由老師的NX檔，還有由組長分配畫圖，我這次被分配到Onshape，利用NX1980量尺寸，再把它畫出來。這個過程中遇到了公英制的問題，但到了最後跟組員們一起討論統一尺寸。W10利用改變一些程式，只需輸入數值就可以自動長料，和設定SSH，這樣就可以不用重新設定token了。 \n', 'tags': '', 'url': '心得.html'}, {'title': 'W11 任務wink', 'text': '\n   \n \n \n \n \n \n \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n', 'tags': '', 'url': 'W11 任務wink.html'}, {'title': 'W12', 'text': '\n cd2022_uarm_nx12_imported.7z \xa0 中, 若計入重複引用的零件, 總數有多少? 請列出組成此一 uarm 機械手臂所需的 BOM 列表. \n 若不計入重複引用的零件, 總數有多少? 請列出各零件名稱. \n 當執行機械手臂的設計過程中, 若已知各零件所擬採用的零件材料密度, 請問此一設計中的 uarm 機械手臂的淨重量為多少? ( uArm-Swift-Specifications.pdf ) \n 當執行機械手臂設計與製程規劃時, 若已知各零件擬採行的製造程序、取得方法與所需時間及成本, 請問此一設計中的 uarm 機械手臂, 該如何計算一定數量需求下, 需花費多少時間? 如何計算成本? \n \n', 'tags': '', 'url': 'W12.html'}, {'title': 'online', 'text': '\n', 'tags': '', 'url': 'online.html'}, {'title': 'W13', 'text': '', 'tags': '', 'url': 'W13.html'}, {'title': 'W14', 'text': 'WINK \n Coppeliasim 4.3.0 rev3 \n MTB_nx_kinematic.ttt \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n \n \n -------------- \n 程式 \n function sysCall_init() \n    axis1=sim.getObject(\'/joint1\')\n    axis2=sim.getObject(\'/joint2\')\n    axis3=sim.getObject(\'/joint3\')\n    suctionPad=sim.getObject(\'/suctionPad\')\n    MTB_Robot=sim.getObject("/base")\n    BaseFrame=sim.getObject("/BaseFrame")\n    block =sim.getObject("/block")\n    rotation1 = 0\n    distance3 = 0\n    deg = math.pi/180.\nend\n   \n   \nfunction sysCall_actuation() \n  \n    rotation1 = rotation1 + 0.5*deg\n    print(rotation1)\n    sim.setJointPosition(axis1, -rotation1)\n    sim.setJointPosition(axis2, -rotation1)\n  \n    message, auxiliaryData=sim.getSimulatorMessage()\n        while message ~= -1 do\n            key=auxiliaryData[1]\n            sim.addStatusbarMessage(\'user press key:\'..key)\n            if (message==sim.message_keypress) then\n               --if (auxiliaryData[1]==112) then --p activate the suction pad\n                if (auxiliaryData[1]==string.byte(\'p\')) then\n                    -- if key p pressed activate the suction mode\nsim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),\'active\',\'true\')\n                end -- if p\n                if (auxiliaryData[1]==113) then --q deactivate the suction pad\n                    -- if key q pressed deactivate the suction mode\nsim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),\'active\',\'false\')\n                end -- if q\n                if (auxiliaryData[1]==114) then --r right turn in degree\n                    -- if key r pressed axis1 angle adds 5 degrees\n                     rotation1 = rotation1 + 5*deg\n                     sim.setJointPosition(axis1, rotation1)\n                end -- if r\n                if (auxiliaryData[1]==108) then --l left turn in degree\n                    -- if key l pressed axis1 angle substract 5 degrees\n                     rotation1 = rotation1 - 5*deg\n                     sim.setJointPosition(axis1, rotation1)\n                end -- if l\n                if (auxiliaryData[1]==100) then --d suction pad down\n                    -- if key d pressed axis3 will down 0.01 m\n                     distance3 = distance3 + 0.01\n                     sim.setJointPosition(axis3, distance3)\n                end -- if d\n                if (auxiliaryData[1]==117) then --u suction pad up\n                    -- if key u pressed axis3 will up 0.01 m\n                     distance3 = distance3 - 0.01\n                     sim.setJointPosition(axis3, distance3)\n                end -- if u\n                if (auxiliaryData[1]==99) then --c coordinate of block\n                    --blockPosition = sim.getObjectPosition(block, BaseFrame)\n                    blockPosition = sim.getObjectPosition(suctionPad, BaseFrame)\n                    sim.addStatusbarMessage("coordinate:"..table_to_string(blockPosition))\n                end --if c\n           end  -- if\n    message, auxiliaryData=sim.getSimulatorMessage()\n        end -- while\nend -- function\nfunction sysCall_sensing() \n--[[\n    -- Read Proximity sensor (0= nothing detected, 1 = object detected)\n    local res = sim.readProximitySensor(proximity)\n   \n    -- Check if possible to insert an new box\n    if (sim.getSimulationTime()-T_last_inserted > T_insert) and not hasStopped then\n        insertBox()\n    end\n   \n    -- If proximity sensor detects an object, stop the belt, stop inserting objects\n    if res == 1 and not hasStopped then\n        if boolList[1] then\n            sim.setScriptSimulationParameter(sim.handle_self,"conveyorBeltVelocity",0)\n            deltaTime = sim.getSimulationTime()-T_last_inserted\n            hasStopped = true\n        else\n            local box = table.remove(boxList,1)\n            local boxDummy = table.remove(boxDummyList,1)\n            table.remove(boolList,1)\n   \n            sim.removeObject(box)\n            sim.removeObject(boxDummy)\n        end\n    end\n   \n    -- If proximity sensor detects nothing and belt has stopped, start belt, continue inserting\n    if res == 0 and hasStopped then\n        sim.setScriptSimulationParameter(sim.handle_self,"conveyorBeltVelocity",beltSpeed)\n        hasStopped = false\n        T_last_inserted = sim.getSimulationTime()-deltaTime\n    end\n       \n]]--\nend\nfunction sysCall_cleanup() \nend\n-- Convert a lua table into a lua syntactically correct string\nfunction table_to_string(tbl)\n    local result = "{"\n    for k, v in pairs(tbl) do\n        -- Check the key type (ignore any numerical keys - assume its an array)\n        if type(k) == "string" then\n            result = result.."[\\""..k.."\\"]".."="\n        end\n   \n        -- Check the value type\n        if type(v) == "table" then\n            result = result..table_to_string(v)\n        elseif type(v) == "boolean" then\n            result = result..tostring(v)\n        else\n            v = round(v, 4)\n            result = result.."\\""..v.."\\""\n        end\n        result = result..","\n    end\n    -- Remove leading commas from the result\n    if result ~= "" then\n        result = result:sub(1, result:len()-1)\n    end\n    return result.."}"\nend\nfunction round(x, n)\n    n = math.pow(10, n or 0)\n    x = x * n\n    if x >= 0 then x = math.floor(x + 0.5) else x = math.ceil(x - 0.5) end\n    return x / n\nend\n   \n   \nfunction insertBox()\n    -- Generate random numbers\n    local rand1 = math.random()\n    local rand2 = math.random()\n    local rand3 = math.random()\n    -- Generate random disturbances on position and orientation\n    local dx = (2*rand1-1)*0.1\n    local dy = (2*rand2-1)*0.1\n    local dphi = (2*rand3-1)*0.5\n    local disturbedCoordinates = {0,0,0}\n    disturbedCoordinates[1] = insertCoordinate[1]+dx\n    disturbedCoordinates[2] = insertCoordinate[2]+dy\n    disturbedCoordinates[3] = insertCoordinate[3]\n    -- Copy and paste box and boxDummy\n    local insertedObjects = sim.copyPasteObjects({box,boxDummy},0)\n    -- Update last inserted box time\n    T_last_inserted = sim.getSimulationTime()\n    -- Move and rotate\n    sim.setObjectPosition(insertedObjects[1],-1,disturbedCoordinates)\n    sim.setObjectOrientation(insertedObjects[1],-1,{0,0,dphi})\n    -- Store handles to boxes and dummies\n    table.insert(boxList,insertedObjects[1])\n    table.insert(boxDummyList,insertedObjects[2]) \n    -- Decide if object is good or bad\n    local decision = math.random() \n    if decision <= goodPercentage then\n    -- Object is good, assign goodColor\n        sim.setShapeColor(insertedObjects[1],nil,sim.colorcomponent_ambient_diffuse,goodColor)\n        table.insert(boolList,true)\n    else\n    -- Object is bad, assign random color\n        sim.setShapeColor(insertedObjects[1],nil,sim.colorcomponent_ambient_diffuse,{rand1,rand2,rand3})\n        table.insert(boolList,false)\n    end\nend\n \n', 'tags': '', 'url': 'W14.html'}, {'title': 'W15', 'text': '', 'tags': '', 'url': 'W15.html'}, {'title': 'W16', 'text': '利用 tkinter GUI 介面 slider 控制 uArm 機械手臂: \n \n \n \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n \n -------------------------- \n 1.已知左側綠色底座的 uArm 機械手臂, 其基座座標原點位於絕對座標 (1.0, 0.25, 0), 啟動模擬後 green_suctionpad_frame 座標原點則位於 (0.22859, 0.26047, 0.36576), 請列出運算式說明, 啟動模擬後 joint1, joint2 與 joint3 分別以逆時針旋轉 5 度後, 求 green_suctionpad_frame 的絕對座標值。 \n Ans: ( x:+1 , y: +0.25 , z: 0.1795 ) \n ---------------------------------------------- \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n \n ---------------------------------------------- \n 2.已知左側 uarm 前方的紅色方塊頂端中心座標值為 (0.2, 0.4, 0.1), 請列出運算式說明左側 uarm 機械手臂的 joint1, joint2 與 joint3 該如何旋轉才能讓 end effector 的吸盤末端中心點移動至紅色方塊頂端中心? \n ---------------------------------- \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n', 'tags': '', 'url': 'W16.html'}, {'title': '期末考週', 'text': '零件繪製 \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n \n 心得:利用這學期學的NX，把老師要求的兩個零件對調並畫出來，絞鍊的部分花了比較多時間，但最後還是有畫出來。 \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n \n NX組立並裝入兩個對調零件 \n Uarm作動影片 \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n \n 測試Uarm用Slider控制 \n youtube連結: https://youtu.be/k1xDua8tndY \n 心得:使用老師給檔案 \xa0uarm_tkinter_control.py ，在CoppeliaSim按下播放鍵後使用小白窗放入程式 按Tool再來按GO，跟W16的使用方法一樣，直接派上用場。\xa0', 'tags': '', 'url': '期末考週.html'}]};